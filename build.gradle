plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "de.undercouch.download" version "5.3.0"
}

group = 'technology.nrkk.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

def grpcVersion = '1.65.1'
def awsSdkVersion = '2.31.66'
def newrelicVersion = '8.21.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'
    implementation 'org.thymeleaf:thymeleaf-spring5:3.1.2.RELEASE'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation "software.amazon.awssdk:bedrockruntime:${awsSdkVersion}"
    implementation "software.amazon.awssdk:auth:${awsSdkVersion}"
    implementation "software.amazon.awssdk:regions:${awsSdkVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'io.qdrant:client:1.14.0'
    implementation "com.newrelic.agent.java:newrelic-api:${newrelicVersion}"
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

bootRun {
    jvmArgs = ["-javaagent:/Users/tazuma/develop/Pelecanidae/frontservice/newrelic/newrelic.jar"]
}
tasks.named('test') {
    useJUnitPlatform()
    reports {
        junitXml.required.set(true)
    }
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src "https://download.newrelic.com/newrelic/java-agent/newrelic-agent/${newrelicVersion}/newrelic-java.zip"
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}