{"version":3,"file":"static/js/lazy-feature-loader.adbce7c2.chunk.js","mappings":"4IAaO,SAASA,EAAkBC,EAAaC,GAC7C,GAAoB,cAAhBA,EACF,OAAQD,GACN,KAAKE,EAAAA,EAAcC,KACjB,OAAO,sDACT,KAAKD,EAAAA,EAAcE,SACjB,OAAO,sDACT,KAAKF,EAAAA,EAAcG,QACjB,OAAO,qDACT,KAAKH,EAAAA,EAAcI,WACjB,OAAO,qDACT,KAAKJ,EAAAA,EAAcK,cACjB,OAAO,sDACT,KAAKL,EAAAA,EAAcM,eACjB,OAAO,sDACT,KAAKN,EAAAA,EAAcO,cACjB,OAAO,sDACT,KAAKP,EAAAA,EAAcQ,aACjB,OAAO,sDACT,KAAKR,EAAAA,EAAcS,IACjB,OAAO,sDACT,QACE,MAAM,IAAIC,MAAM,gDAAgDC,OAAOb,EAAa,KAAKa,OAAOZ,IAGxG,C","sources":["../node_modules/@newrelic/browser-agent/dist/esm/features/utils/lazy-feature-loader.js"],"sourcesContent":["import { FEATURE_NAMES } from '../../loaders/features/features';\n\n/**\n * Centralizes the lazy loading of agent feature aggregate and instrument sources.\n *\n * This function uses two defined switch cases to allow us to easily name our chunks and re-use these\n * chunks for different agent types. We do not use template strings or string concatenation here because\n * doing so makes it much more difficult to name the chunks and forces Webpack to \"guess\" what the chunks\n * should be.\n * @param featureName Name of the feature to import such as ajax or session_trace\n * @param featurePart Name of the feature part to load; should be either instrument or aggregate\n * @returns {Promise<InstrumentBase|FeatureBase|null>}\n */\nexport function lazyFeatureLoader(featureName, featurePart) {\n  if (featurePart === 'aggregate') {\n    switch (featureName) {\n      case FEATURE_NAMES.ajax:\n        return import( /* webpackChunkName: \"ajax-aggregate\" */'../ajax/aggregate');\n      case FEATURE_NAMES.jserrors:\n        return import( /* webpackChunkName: \"jserrors-aggregate\" */'../jserrors/aggregate');\n      case FEATURE_NAMES.metrics:\n        return import( /* webpackChunkName: \"metrics-aggregate\" */'../metrics/aggregate');\n      case FEATURE_NAMES.pageAction:\n        return import( /* webpackChunkName: \"page_action-aggregate\" */'../page_action/aggregate');\n      case FEATURE_NAMES.pageViewEvent:\n        return import( /* webpackChunkName: \"page_view_event-aggregate\" */'../page_view_event/aggregate');\n      case FEATURE_NAMES.pageViewTiming:\n        return import( /* webpackChunkName: \"page_view_timing-aggregate\" */'../page_view_timing/aggregate');\n      case FEATURE_NAMES.sessionReplay:\n        return import( /* webpackChunkName: \"session_replay-aggregate\" */'../session_replay/aggregate');\n      case FEATURE_NAMES.sessionTrace:\n        return import( /* webpackChunkName: \"session_trace-aggregate\" */'../session_trace/aggregate');\n      case FEATURE_NAMES.spa:\n        return import( /* webpackChunkName: \"spa-aggregate\" */'../spa/aggregate');\n      default:\n        throw new Error(\"Attempted to load unsupported agent feature: \".concat(featureName, \" \").concat(featurePart));\n    }\n  }\n}"],"names":["lazyFeatureLoader","featureName","featurePart","FEATURE_NAMES","ajax","jserrors","metrics","pageAction","pageViewEvent","pageViewTiming","sessionReplay","sessionTrace","spa","Error","concat"],"sourceRoot":""}