{"version":3,"file":"static/js/863.253045d9.chunk.js","mappings":"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","sources":["../node_modules/@newrelic/browser-agent/dist/esm/common/url/location.js","../node_modules/@newrelic/browser-agent/dist/esm/common/util/traverse.js","../node_modules/@newrelic/browser-agent/dist/esm/common/harvest/harvest.js","../node_modules/@newrelic/browser-agent/dist/esm/common/url/clean-url.js","../node_modules/@newrelic/browser-agent/dist/esm/common/url/encode.js","../node_modules/@newrelic/browser-agent/dist/esm/common/url/protocol.js","../node_modules/@newrelic/browser-agent/dist/esm/common/util/obfuscate.js","../node_modules/@newrelic/browser-agent/dist/esm/common/util/submit-data.js","../node_modules/@newrelic/browser-agent/dist/esm/features/utils/aggregate-base.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * This method only exists to support testing in JIL and can be removed once tests are migrated to WDIO.\n * @returns global scope location\n */\nexport function getLocation() {\n  return '' + location;\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Applies a function to properties of a specified type in an object, recursively.\n *\n * @param {Object} obj - The object to apply the function to.\n * @param {Function} fn - The function to apply to matching properties.\n * @param {string} [type='string'] - The type of properties to apply the function to.\n * @param {Array<string>} [ignoreKeys=[]] - The keys of properties to ignore and not modify.\n * @returns {Object} - The object with function recursively applied.\n */\nexport function applyFnToProps(obj, fn) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'string';\n  let ignoreKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (!obj || typeof obj !== 'object') return obj;\n  Object.keys(obj).forEach(property => {\n    if (typeof obj[property] === 'object') {\n      applyFnToProps(obj[property], fn, type, ignoreKeys);\n    } else {\n      // eslint-disable-next-line valid-typeof\n      if (typeof obj[property] === type && !ignoreKeys.includes(property)) obj[property] = fn(obj[property]);\n    }\n  });\n  return obj;\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { obj as encodeObj, param as encodeParam } from '../url/encode';\nimport { stringify } from '../util/stringify';\nimport * as submitData from '../util/submit-data';\nimport { getLocation } from '../url/location';\nimport { getInfo, getConfigurationValue, getRuntime, getConfiguration } from '../config/config';\nimport { cleanURL } from '../url/clean-url';\nimport { now } from '../timing/now';\nimport { eventListenerOpts } from '../event-listener/event-listener-opts';\nimport { Obfuscator } from '../util/obfuscate';\nimport { applyFnToProps } from '../util/traverse';\nimport { SharedContext } from '../context/shared-context';\nimport { VERSION } from \"../constants/env.npm\";\nimport { isWorkerScope, isIE } from '../constants/runtime';\nimport { warn } from '../util/console';\nconst warnings = {};\n\n/**\n * @typedef {import('./types.js').NetworkSendSpec} NetworkSendSpec\n * @typedef {import('./types.js').HarvestEndpointIdentifier} HarvestEndpointIdentifier\n * @typedef {import('./types.js').HarvestPayload} HarvestPayload\n * @typedef {import('./types.js').FeatureHarvestCallback} FeatureHarvestCallback\n * @typedef {import('./types.js').FeatureHarvestCallbackOptions} FeatureHarvestCallbackOptions\n */\nexport class Harvest extends SharedContext {\n  constructor(parent) {\n    super(parent); // gets any allowed properties from the parent and stores them in `sharedContext`\n\n    this.tooManyRequestsDelay = getConfigurationValue(this.sharedContext.agentIdentifier, 'harvest.tooManyRequestsDelay') || 60;\n    this.obfuscator = new Obfuscator(this.sharedContext);\n    this._events = {};\n  }\n\n  /**\n   * Initiate a harvest from multiple sources. An event that corresponds to the endpoint\n   * name is emitted, which gives any listeners the opportunity to provide payload data.\n   * Note: Used by page_action\n   * @param {NetworkSendSpec} spec Specification for sending data\n   */\n  sendX() {\n    let spec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const submitMethod = submitData.getSubmitMethod({\n      isFinalHarvest: spec.opts?.unload\n    });\n    const options = {\n      retry: !spec.opts?.unload && submitMethod === submitData.xhr,\n      isFinalHarvest: spec.opts?.unload === true\n    };\n    const payload = this.createPayload(spec.endpoint, options);\n    const caller = this.obfuscator.shouldObfuscate() ? this.obfuscateAndSend.bind(this) : this._send.bind(this);\n    return caller({\n      ...spec,\n      payload,\n      submitMethod\n    });\n  }\n\n  /**\n   * Initiate a harvest call.\n   * @param {NetworkSendSpec} spec Specification for sending data\n   */\n  send() {\n    let spec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const caller = this.obfuscator.shouldObfuscate() ? this.obfuscateAndSend.bind(this) : this._send.bind(this);\n    return caller(spec);\n  }\n\n  /**\n   * Apply obfuscation rules to the payload and then initial the harvest network call.\n   * @param {NetworkSendSpec} spec Specification for sending data\n   */\n  obfuscateAndSend() {\n    var _this = this;\n    let spec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      payload = {}\n    } = spec;\n    applyFnToProps(payload, function () {\n      return _this.obfuscator.obfuscateString(...arguments);\n    }, 'string', ['e']);\n    return this._send({\n      ...spec,\n      payload\n    });\n  }\n\n  /**\n   * Initiate a harvest call. Typically used by `sendX` and `send` methods or called directly\n   * for raw network calls.\n   * @param {NetworkSendSpec} param0 Specification for sending data\n   * @returns {boolean} True if the network call succeeded. For final harvest calls, the return\n   * value should not be relied upon because network calls will be made asynchronously.\n   */\n  _send(_ref) {\n    let {\n      endpoint,\n      payload = {},\n      opts = {},\n      submitMethod,\n      cbFinished,\n      customUrl,\n      raw,\n      includeBaseParams = true\n    } = _ref;\n    const info = getInfo(this.sharedContext.agentIdentifier);\n    if (!info.errorBeacon) return false;\n    const agentRuntime = getRuntime(this.sharedContext.agentIdentifier);\n    let {\n      body,\n      qs\n    } = this.cleanPayload(payload);\n    if (Object.keys(body).length === 0 && !opts?.sendEmptyBody) {\n      // no payload body? nothing to send, just run onfinish stuff and return\n      if (cbFinished) {\n        cbFinished({\n          sent: false\n        });\n      }\n      return false;\n    }\n    const init = getConfiguration(this.sharedContext.agentIdentifier);\n    const protocol = init.ssl === false ? 'http' : 'https';\n    const perceviedBeacon = init.proxy.beacon || info.errorBeacon;\n    const endpointURLPart = endpoint !== 'rum' ? \"/\".concat(endpoint) : '';\n    let url = \"\".concat(protocol, \"://\").concat(perceviedBeacon).concat(endpointURLPart, \"/1/\").concat(info.licenseKey);\n    if (customUrl) url = customUrl;\n    if (raw) url = \"\".concat(protocol, \"://\").concat(perceviedBeacon, \"/\").concat(endpoint);\n    const baseParams = !raw && includeBaseParams ? this.baseQueryString(qs) : '';\n    let payloadParams = encodeObj(qs, agentRuntime.maxBytes);\n    if (!submitMethod) {\n      submitMethod = submitData.getSubmitMethod({\n        isFinalHarvest: opts.unload\n      });\n    }\n    if (baseParams === '' && payloadParams.startsWith('&')) {\n      payloadParams = payloadParams.substring(1);\n    }\n    const fullUrl = \"\".concat(url, \"?\").concat(baseParams).concat(payloadParams);\n    const gzip = !!qs?.attributes?.includes('gzip');\n    if (!gzip) {\n      if (endpoint === 'events') {\n        body = body.e;\n      } else {\n        body = stringify(body);\n      }\n      /** Warn --once per endpoint-- if the agent tries to send large payloads */\n      if (body.length > 750000 && (warnings[endpoint] = (warnings?.[endpoint] || 0) + 1) === 1) warn(\"The Browser Agent is attempting to send a very large payload to /\".concat(endpoint, \". This is usually tied to large amounts of custom attributes. Please check your configurations.\"));\n    }\n    if (!body || body.length === 0 || body === '{}' || body === '[]') {\n      // If body is null, undefined, or an empty object or array, send an empty string instead\n      body = '';\n    }\n    const headers = [];\n    headers.push({\n      key: 'content-type',\n      value: 'text/plain'\n    });\n\n    /* Since workers don't support sendBeacon right now, they can only use XHR method.\n        Because they still do permit synch XHR, the idea is that at final harvest time (worker is closing),\n        we just make a BLOCKING request--trivial impact--with the remaining data as a temp fill-in for sendBeacon.\n       Following the removal of img-element method, IE will also use sync XHR on page dismissal to ensure final analytics are sent. */\n    let result = submitMethod({\n      url: fullUrl,\n      body,\n      sync: opts.unload && (isWorkerScope || isIE),\n      headers\n    });\n    if (!opts.unload && cbFinished && submitMethod === submitData.xhr) {\n      const harvestScope = this;\n      result.addEventListener('load', function () {\n        // `this` refers to the XHR object in this scope, do not change this to a fat arrow\n        const cbResult = {\n          sent: true,\n          status: this.status\n        };\n        if (this.status === 429) {\n          cbResult.retry = true;\n          cbResult.delay = harvestScope.tooManyRequestsDelay;\n        } else if (this.status === 408 || this.status === 500 || this.status === 503) {\n          cbResult.retry = true;\n        }\n        if (opts.needResponse) {\n          cbResult.responseText = this.responseText;\n        }\n        cbFinished(cbResult);\n      }, eventListenerOpts(false));\n    }\n    return result;\n  }\n\n  // The stuff that gets sent every time.\n  baseQueryString(qs) {\n    const runtime = getRuntime(this.sharedContext.agentIdentifier);\n    const info = getInfo(this.sharedContext.agentIdentifier);\n    const location = cleanURL(getLocation());\n    const ref = this.obfuscator.shouldObfuscate() ? this.obfuscator.obfuscateString(location) : location;\n    return ['a=' + info.applicationID, encodeParam('sa', info.sa ? '' + info.sa : ''), encodeParam('v', VERSION), transactionNameParam(info), encodeParam('ct', runtime.customTransaction), '&rst=' + now(), '&ck=0',\n    // ck param DEPRECATED - still expected by backend\n    '&s=' + (runtime.session?.state.value || '0'),\n    // the 0 id encaps all untrackable and default traffic\n    encodeParam('ref', ref), encodeParam('ptid', runtime.ptid ? '' + runtime.ptid : ''), encodeParam('hr', runtime?.session?.state.sessionReplayMode === 1 ? '1' : '0', qs) // hasReplay\n    ].join('');\n  }\n\n  /**\n   * Calls and accumulates data from registered harvesting functions based on\n   * the endpoint being harvested.\n   * @param {HarvestEndpointIdentifier} endpoint BAM endpoint identifier.\n   * @param {FeatureHarvestCallbackOptions} options Options to be passed to the\n   * feature harvest listener callback.\n   * @returns {HarvestPayload} Payload object to transmit to the bam endpoint.\n   */\n  createPayload(endpoint, options) {\n    const listeners = this._events[endpoint];\n    const payload = {\n      body: {},\n      qs: {}\n    };\n    if (Array.isArray(listeners) && listeners.length > 0) {\n      for (let i = 0; i < listeners.length; i++) {\n        const singlePayload = listeners[i](options);\n        if (singlePayload) {\n          payload.body = {\n            ...payload.body,\n            ...(singlePayload.body || {})\n          };\n          payload.qs = {\n            ...payload.qs,\n            ...(singlePayload.qs || {})\n          };\n        }\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Cleans and returns a payload object containing a body and qs\n   * object with key/value pairs. KV pairs where the value is null,\n   * undefined, or an empty string are removed to save on transmission\n   * size.\n   * @param {HarvestPayload} payload Payload to be sent to the endpoint.\n   * @returns {HarvestPayload} Cleaned payload payload to be sent to the endpoint.\n   */\n  cleanPayload() {\n    let payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const clean = input => {\n      if (typeof Uint8Array !== 'undefined' && input instanceof Uint8Array || Array.isArray(input)) return input;\n      if (typeof input === 'string') return input.length > 0 ? input : null;\n      return Object.entries(input || {}).reduce((accumulator, _ref2) => {\n        let [key, value] = _ref2;\n        if (typeof value === 'number' || typeof value === 'string' && value.length > 0 || typeof value === 'object' && Object.keys(value || {}).length > 0) {\n          accumulator[key] = value;\n        }\n        return accumulator;\n      }, {});\n    };\n    return {\n      body: clean(payload.body),\n      qs: clean(payload.qs)\n    };\n  }\n\n  /**\n   * Registers a function to be called when harvesting is triggered for a specific\n   * endpoint.\n   * @param {HarvestEndpointIdentifier} endpoint\n   * @param {FeatureHarvestCallback} listener\n   */\n  on(endpoint, listener) {\n    if (!Array.isArray(this._events[endpoint])) {\n      this._events[endpoint] = [];\n    }\n    this._events[endpoint].push(listener);\n  }\n}\n\n// Constructs the transaction name param for the beacon URL.\n// Prefers the obfuscated transaction name over the plain text.\n// Falls back to making up a name.\nfunction transactionNameParam(info) {\n  if (info.transactionName) return encodeParam('to', info.transactionName);\n  return encodeParam('t', info.tNamePlain || 'Unnamed Transaction');\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nvar patternWithHash = /([^?#]*)[^#]*(#[^?]*|$).*/;\nvar patternWithoutHash = /([^?#]*)().*/;\n\n/**\n * Cleans a URL by removing the query string and fragment (hash portion).\n * @param {string} url - The original URL to be cleaned.\n * @param {boolean} [keepHash=false] - Whether to preserve the hash portion of the URL.\n * @returns {string} The cleaned URL.\n */\nexport function cleanURL(url, keepHash) {\n  return url.replace(keepHash ? patternWithHash : patternWithoutHash, '$1$2');\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapOwn } from '../util/map-own';\nimport { stringify } from '../util/stringify';\n\n// Characters that are safe in a qs, but get encoded.\nvar charMap = {\n  '%2C': ',',\n  '%3A': ':',\n  '%2F': '/',\n  '%40': '@',\n  '%24': '$',\n  '%3B': ';'\n};\nvar charList = mapOwn(charMap, function (k) {\n  return k;\n});\nvar safeEncoded = new RegExp(charList.join('|'), 'g');\nfunction real(c) {\n  return charMap[c];\n}\n\n// Encode as URI Component, then unescape anything that is ok in the\n// query string position.\nexport function qs(value) {\n  if (value === null || value === undefined) return 'null';\n  return encodeURIComponent(value).replace(safeEncoded, real);\n}\nexport function fromArray(qs, maxBytes) {\n  var bytes = 0;\n  for (var i = 0; i < qs.length; i++) {\n    bytes += qs[i].length;\n    if (bytes > maxBytes) return qs.slice(0, i).join('');\n  }\n  return qs.join('');\n}\nexport function obj(payload, maxBytes) {\n  var total = 0;\n  var result = '';\n  mapOwn(payload, function (feature, dataArray) {\n    var intermediate = [];\n    var next;\n    var i;\n    if (typeof dataArray === 'string' || !Array.isArray(dataArray) && dataArray !== null && dataArray !== undefined && dataArray.toString().length) {\n      next = '&' + feature + '=' + qs(dataArray);\n      total += next.length;\n      result += next;\n    } else if (Array.isArray(dataArray) && dataArray.length) {\n      total += 9;\n      for (i = 0; i < dataArray.length; i++) {\n        next = qs(stringify(dataArray[i]));\n        total += next.length;\n        if (typeof maxBytes !== 'undefined' && total >= maxBytes) break;\n        intermediate.push(next);\n      }\n      result += '&' + feature + '=%5B' + intermediate.join(',') + '%5D';\n    }\n  });\n  return result;\n}\n\n// Constructs an HTTP parameter to add to the BAM router URL\nexport function param(name, value) {\n  let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (Object.keys(base).includes(name)) return ''; // we assume if feature supplied a matching qp to the base, we should honor what the feature sent over the default\n  if (value && typeof value === 'string') {\n    return '&' + name + '=' + qs(value);\n  }\n  return '';\n}","/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { globalScope } from '../constants/runtime';\nexport function isFileProtocol() {\n  return Boolean(globalScope?.location?.protocol === 'file:');\n}","import { getConfigurationValue } from '../config/config';\nimport { SharedContext } from '../context/shared-context';\nimport { isFileProtocol } from '../url/protocol';\nimport { warn } from './console';\nvar fileProtocolRule = {\n  regex: /^file:\\/\\/(.*)/,\n  replacement: atob('ZmlsZTovL09CRlVTQ0FURUQ=')\n};\nexport class Obfuscator extends SharedContext {\n  shouldObfuscate() {\n    return getRules(this.sharedContext.agentIdentifier).length > 0;\n  }\n\n  // applies all regex obfuscation rules to provided URL string and returns the result\n  obfuscateString(string) {\n    // if string is empty string, null or not a string, return unmodified\n    if (!string || typeof string !== 'string') return string;\n    var rules = getRules(this.sharedContext.agentIdentifier);\n    var obfuscated = string;\n\n    // apply every rule to URL string\n    for (var i = 0; i < rules.length; i++) {\n      var regex = rules[i].regex;\n      var replacement = rules[i].replacement || '*';\n      obfuscated = obfuscated.replace(regex, replacement);\n    }\n    return obfuscated;\n  }\n}\n\n// TO DO: this function should be inside the Obfuscator class since its context relates to agentID\nexport function getRules(agentIdentifier) {\n  var rules = [];\n  var configRules = getConfigurationValue(agentIdentifier, 'obfuscate') || [];\n  rules = rules.concat(configRules);\n  if (isFileProtocol()) rules.push(fileProtocolRule);\n  // could add additional runtime/environment-specific rules here\n\n  return rules;\n}\n\n// takes array of rule objects, logs warning and returns false if any portion of rule is invalid\nexport function validateRules(rules) {\n  var invalidReplacementDetected = false;\n  var invalidRegexDetected = false;\n  for (var i = 0; i < rules.length; i++) {\n    if (!('regex' in rules[i])) {\n      warn('An obfuscation replacement rule was detected missing a \"regex\" value.');\n      invalidRegexDetected = true;\n    } else if (typeof rules[i].regex !== 'string' && !(rules[i].regex instanceof RegExp)) {\n      warn('An obfuscation replacement rule contains a \"regex\" value with an invalid type (must be a string or RegExp)');\n      invalidRegexDetected = true;\n    }\n    var replacement = rules[i].replacement;\n    if (replacement && typeof replacement !== 'string') {\n      warn('An obfuscation replacement rule contains a \"replacement\" value with an invalid type (must be a string)');\n      invalidReplacementDetected = true;\n    }\n  }\n  return !invalidReplacementDetected && !invalidRegexDetected;\n}","/**\n * @file Contains common methods used to transmit harvested data.\n * @copyright 2023 New Relic Corporation. All rights reserved.\n * @license Apache-2.0\n */\n\nimport { isBrowserScope, supportsSendBeacon } from '../constants/runtime';\n\n/**\n * @typedef {xhr|beacon} NetworkMethods\n */\n\n/**\n * Determines the submit method to use based on options.\n * @param {object} opts Options used to determine submit method.\n * @param {boolean} opts.isFinalHarvest Indicates if the data submission is due to\n * a final harvest within the agent.\n */\nexport function getSubmitMethod() {\n  let {\n    isFinalHarvest = false\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return isFinalHarvest && isBrowserScope && supportsSendBeacon\n  // Use sendBeacon for final harvest\n  ? beacon\n  // Only IE does not support sendBeacon for final harvest\n  // If not final harvest, or not browserScope, always use xhr post\n  : xhr;\n}\n\n/**\n * Send via XHR\n * @param {Object} args - The args.\n * @param {string} args.url - The URL to send to.\n * @param {string=} args.body - The Stringified body. Default null to prevent IE11 from breaking.\n * @param {boolean=} args.sync - Run XHR synchronously.\n * @param {string=} [args.method=POST] - The XHR method to use.\n * @param {{key: string, value: string}[]} [args.headers] - The headers to attach.\n * @returns {XMLHttpRequest}\n */\nexport function xhr(_ref) {\n  let {\n    url,\n    body = null,\n    sync,\n    method = 'POST',\n    headers = [{\n      key: 'content-type',\n      value: 'text/plain'\n    }]\n  } = _ref;\n  const request = new XMLHttpRequest();\n  request.open(method, url, !sync);\n  try {\n    // Set cookie\n    if ('withCredentials' in request) request.withCredentials = true;\n  } catch (e) {\n    // do nothing\n  }\n  headers.forEach(header => {\n    request.setRequestHeader(header.key, header.value);\n  });\n  request.send(body);\n  return request;\n}\n\n/**\n * Send via sendBeacon. Do NOT call this function outside of a guaranteed web window environment.\n * @param {Object} args - The args\n * @param {string} args.url - The URL to send to\n * @param {string=} args.body - The Stringified body\n * @returns {boolean}\n */\nexport function beacon(_ref2) {\n  let {\n    url,\n    body\n  } = _ref2;\n  try {\n    // Navigator has to be bound to ensure it does not error in some browsers\n    // https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    const send = window.navigator.sendBeacon.bind(window.navigator);\n    return send(url, body);\n  } catch (err) {\n    // if sendBeacon still trys to throw an illegal invocation error,\n    // we can catch here and return\n    return false;\n  }\n}","import { registerHandler } from '../../common/event-emitter/register-handler';\nimport { FeatureBase } from './feature-base';\nimport { getInfo, isConfigured, getRuntime } from '../../common/config/config';\nimport { configure } from '../../loaders/configure/configure';\nimport { gosCDN } from '../../common/window/nreum';\nimport { drain } from '../../common/drain/drain';\nexport class AggregateBase extends FeatureBase {\n  constructor() {\n    super(...arguments);\n    this.checkConfiguration();\n  }\n\n  /**\n   * New handler for waiting for multiple flags. Useful when expecting multiple flags simultaneously (ex. stn vs sr)\n   * @param {string[]} flagNames\n   * @returns\n   */\n  waitForFlags() {\n    let flagNames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return Promise.all(flagNames.map(fName => new Promise(resolve => {\n      registerHandler(\"rumresp-\".concat(fName), isOn => resolve(isOn), this.featureName, this.ee);\n    })));\n  }\n  drain() {\n    drain(this.agentIdentifier, this.featureName);\n  }\n\n  /**\n   * Checks for additional `jsAttributes` items to support backward compatibility with implementations of the agent where\n   * loader configurations may appear after the loader code is executed.\n   */\n  checkConfiguration() {\n    // NOTE: This check has to happen at aggregator load time\n    if (!isConfigured(this.agentIdentifier)) {\n      let jsAttributes = {\n        ...gosCDN().info?.jsAttributes\n      };\n      try {\n        jsAttributes = {\n          ...jsAttributes,\n          ...getInfo(this.agentIdentifier)?.jsAttributes\n        };\n      } catch (err) {\n        // do nothing\n      }\n      configure({\n        agentIdentifier: this.agentIdentifier\n      }, {\n        ...gosCDN(),\n        info: {\n          ...gosCDN().info,\n          jsAttributes\n        },\n        runtime: getRuntime(this.agentIdentifier)\n      });\n    }\n  }\n}"],"names":["getLocation","location","applyFnToProps","obj","fn","type","arguments","length","undefined","ignoreKeys","Object","keys","forEach","property","includes","warnings","Harvest","SharedContext","constructor","parent","super","this","tooManyRequestsDelay","getConfigurationValue","sharedContext","agentIdentifier","obfuscator","Obfuscator","_events","sendX","_spec$opts","_spec$opts2","_spec$opts3","spec","submitMethod","submitData","isFinalHarvest","opts","unload","options","retry","payload","createPayload","endpoint","shouldObfuscate","obfuscateAndSend","bind","_send","send","_this","obfuscateString","_ref","_qs$attributes","cbFinished","customUrl","raw","includeBaseParams","info","getInfo","errorBeacon","agentRuntime","getRuntime","body","qs","cleanPayload","sendEmptyBody","sent","init","getConfiguration","protocol","ssl","perceviedBeacon","proxy","beacon","endpointURLPart","concat","url","licenseKey","baseParams","baseQueryString","payloadParams","encodeObj","maxBytes","startsWith","substring","fullUrl","attributes","e","stringify","warn","headers","push","key","value","result","sync","isWorkerScope","isIE","harvestScope","addEventListener","cbResult","status","delay","needResponse","responseText","eventListenerOpts","_runtime$session","_runtime$session2","runtime","cleanURL","ref","applicationID","encodeParam","sa","VERSION","transactionNameParam","customTransaction","now","session","state","ptid","sessionReplayMode","join","listeners","Array","isArray","i","singlePayload","clean","input","Uint8Array","entries","reduce","accumulator","_ref2","on","listener","transactionName","tNamePlain","patternWithHash","patternWithoutHash","keepHash","replace","charMap","charList","mapOwn","k","safeEncoded","RegExp","real","c","encodeURIComponent","total","feature","dataArray","next","intermediate","toString","param","name","base","isFileProtocol","_globalScope$location","Boolean","globalScope","fileProtocolRule","regex","replacement","atob","getRules","string","rules","obfuscated","configRules","validateRules","invalidReplacementDetected","invalidRegexDetected","getSubmitMethod","isBrowserScope","supportsSendBeacon","xhr","method","request","XMLHttpRequest","open","withCredentials","header","setRequestHeader","window","navigator","sendBeacon","err","AggregateBase","FeatureBase","checkConfiguration","waitForFlags","flagNames","Promise","all","map","fName","resolve","registerHandler","isOn","featureName","ee","drain","isConfigured","_gosCDN$info","jsAttributes","gosCDN","_getInfo","configure"],"sourceRoot":""}